{"version":3,"sources":["Rating.js","MovieCard.js","actions/MoviesActions.js","actions/types.js","Nav.js","App.js","serviceWorker.js","reducer/MovieReducer.js","reducer/index.js","Store/store.js","MovieItem.js","index.js"],"names":["Rating","props","name","starCount","value","count","connect","dispatch","delete","id","type","payload","deleteMovie","update","movie","updateMovie","key","className","src","image","style","width","height","title","year","rating","to","onClick","x","Image","prompt","Title","Year","edit","Nav","handleChange","texte","setState","text","search","state","keyword","nextValue","prevValue","this","onStarClick","bind","placeholder","onChange","e","target","Component","movies","add","addMovie","map","newId","Math","round","random","newImage","newTitle","newYear","newRating","ajout","Boolean","window","location","hostname","match","initialstate","MovieReducer","action","filter","el","toUpperCase","includes","trim","combineReducers","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","String","params","ReactDOM","render","store","exact","path","component","App","MovieItem","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d3ec4154.chunk.js","sourcesContent":["import React from 'react';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\n \r\nconst Rating = (props) => {    \r\n    return (                \r\n      <div>\r\n        <StarRatingComponent \r\n          name=\"rate1\" \r\n          starCount={5}\r\n          value={props.count}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\nexport default Rating","import React from 'react'\r\nimport { deleteMovie, updateMovie } from \"./actions/MoviesActions\";\r\nimport { connect } from 'react-redux';\r\nimport { Link } from 'react-router-dom'\r\nimport Rating from './Rating'\r\n\r\nconst MovieCard = (props) => {\r\n    const edit = x => {\r\n        var Image = prompt(\" New Movie Image\");\r\n        var Title = prompt(\"New Movie Title\");\r\n        var Year = prompt(\"New Movie Year\")\r\n        var Rating = prompt(\"Movie Rating\");\r\n\r\n        props.update({id: x.id, image: Image, title: Title, year: Year, rating: Rating});\r\n      }\r\n    return(\r\n        <div key={props.movie.id}>\r\n            <img\r\n              className=\"movie-img\"\r\n              src={props.movie.image}\r\n              style={{ width: \"215px\", height: \"290px\" }}\r\n            >\r\n            </img>\r\n            <h2 className=\"title\">{props.movie.title}</h2>\r\n            <h4 className=\"annee\">{props.movie.year}</h4>\r\n            <Rating count={props.movie.rating}/>\r\n\r\n            <Link to={`/movie/${props.movie.id}`}><button className=\"btn\">Movie Description</button></Link>\r\n            <button className=\"btn\" onClick={() => edit(props.movie)}>Edit</button>\r\n            <button className=\"btn\" onClick={() => props.delete(props.movie.id)}>Remove</button>\r\n          </div>\r\n    )\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n    return{\r\n    delete: id => dispatch(deleteMovie(id)),\r\n    update: movie => dispatch(updateMovie(movie))\r\n    }\r\n}\r\nexport default connect(null, mapDispatchToProps)(MovieCard)","import {ADD_MOVIE, DELETE_MOVIE, UPDATE_MOVIE, SEARCH_MOVIE } from './types'\r\n\r\n\r\n\r\nexport const addMovie = movie => {\r\n    return {\r\n        type : ADD_MOVIE,\r\n        payload : movie\r\n    }\r\n}\r\n\r\n\r\nexport const deleteMovie = id => {\r\n    return {\r\n        type : DELETE_MOVIE,\r\n        payload : id\r\n    }\r\n}\r\n\r\n\r\nexport const updateMovie = movie => {\r\n    return {\r\n        type : UPDATE_MOVIE,\r\n        payload : movie\r\n    }\r\n}\r\nexport const searchMovie = ({rating, keyword}) => {\r\n    return {\r\n        type: SEARCH_MOVIE,\r\n        payload: {rating, keyword}\r\n\r\n    }\r\n}","export const ADD_MOVIE = \"ADD_MOVIE\"\r\nexport const DELETE_MOVIE = \"DELETE_MOVIE\"\r\nexport const UPDATE_MOVIE = \"UPDATE_MOVIE\"\r\nexport const SEARCH_MOVIE = \"SEARCH_MOVIE\"","import React, { Component } from 'react';\r\nimport StarRatingComponent from 'react-star-rating-component';\r\nimport { connect } from 'react-redux';\r\nimport { searchMovie } from './actions/MoviesActions';\r\nexport class Nav extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          rating: 3,\r\n          text: ''\r\n        };\r\n      }\r\n      onStarClick(nextValue, prevValue, name) {\r\n        this.setState({rating: nextValue}, () => this.props.search({rating: this.state.rating, keyword: this.state.text}));\r\n      }\r\n      handleChange= texte => {\r\n        this.setState({text: texte}, () => this.props.search({rating: this.state.rating, keyword: this.state.text}))\r\n      }\r\n    render() {\r\n        return (\r\n            <div>\r\n                <StarRatingComponent \r\n          name=\"rate1\" \r\n          starCount={5}\r\n          value={this.state.rating}\r\n          onStarClick={this.onStarClick.bind(this)}\r\n        />\r\n         <input type=\"text\" name=\"lname\" placeholder=\"Search Movies\" onChange={(e)=>this.handleChange(e.target.value)}/>\r\n            </div>\r\n        );\r\n    }\r\n\r\n}\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    search: rating => dispatch(searchMovie(rating))\r\n  }\r\n}\r\nexport default connect(null, mapDispatchToProps)(Nav);\r\n\r\n","import React from \"react\";\nimport MovieCard from './MovieCard';\nimport \"./App.css\";\nimport { connect } from \"react-redux\";\nimport Nav from \"./Nav\";\nimport { addMovie } from \"./actions/MoviesActions\";\n\n\nfunction App(props) {\n  const ajout = () => {\n    var newId = Math.round(Math.random() * 1000);\n    var newImage = prompt(\"Movie Image\");\n    var newTitle = prompt(\"Movie Title\");\n    var newYear = prompt(\"Movie Year\");\n    var newRating = prompt(\"Movie Rating\");\n\n    props.add({ id: newId, image: newImage, title: newTitle, year: newYear, rating: newRating});\n  };\n\n  return (\n      <div className=\"App\">\n        <Nav movie={props.movie}/>\n        <div className=\"movies\">\n          {props.movies.map(movie => <MovieCard movie={movie}/>)}\n        </div>\n        <button className=\"btn\" onClick={(movie) => ajout(movie)}>\n          +\n        </button>\n      </div>\n\n  );\n}\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    add: movie => dispatch(addMovie(movie))\n  };\n};\n\nconst mapStateToProps = state => {\n  return {\n    movies: state.movie\n  };\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { ADD_MOVIE, DELETE_MOVIE, UPDATE_MOVIE, SEARCH_MOVIE } from '../actions/types'\r\nlet initialstate = [\r\n    {\r\n        id: Math.round(Math.random() * 1000),\r\n        image: 'https://amc-theatres-res.cloudinary.com/image/upload/f_auto,fl_lossy,h_465,q_auto,w_310/v1565363492/amc-cdn/production/2/movies/53700/53730/PosterDynamic/87999.jpg',\r\n        title: 'Maleficent',\r\n        year: '2014',\r\n        rating: 3\r\n    },\r\n    {\r\n        id: Math.round(Math.random() * 1000),\r\n        image: \"http://fr.web.img6.acsta.net/c_215_290/pictures/19/07/24/11/24/3992643.jpg\",\r\n        title: 'Scary Stories',\r\n        year: '2019',\r\n        rating: 5\r\n    },\r\n    {\r\n        id: Math.round(Math.random() * 1000),\r\n        image: \"https://m.media-amazon.com/images/M/MV5BYTZmOTY1MDAtOTYxOC00YTQ1LTlkNDUtMmJiZDEyYmE1YmRmXkEyXkFqcGdeQXVyODE5NzE3OTE@._V1_UY268_CR16,0,182,268_AL_.jpg\",\r\n        title: 'Drive',\r\n        year: '2011',\r\n        rating: 2\r\n\r\n    },\r\n    {\r\n        id: Math.round(Math.random() * 1000),\r\n        image: \"https://www.promenadesfilms.com/medias/promenadesfilms/Cartel%20El%20Silencio%20del%20Viento.jpg\",\r\n        title: 'El Cilencio Del Viento',\r\n        year: '2017',\r\n        rating: 1\r\n\r\n    },\r\n    {\r\n        id: Math.round(Math.random() * 1000),\r\n        image: \"https://upload.wikimedia.org/wikipedia/en/thumb/f/f4/Artemis_Fowl_poster.jpg/220px-Artemis_Fowl_poster.jpg\",\r\n        title: 'Sartemis Fowl',\r\n        year: '2019',\r\n        rating: 4\r\n\r\n\r\n    },\r\n    {\r\n        id: Math.round(Math.random() * 1000),\r\n        image: \"https://media.services.cinergy.ch/media/box1600/2adad8d68850dd65b02425ea64c3c758955f22f6.jpg\",\r\n        title: 'Valerian',\r\n        year: '2017',\r\n        rating: 3\r\n    },\r\n    {\r\n        id: Math.round(Math.random() * 1000),\r\n        image: \"http://fr.web.img5.acsta.net/c_215_290/pictures/14/08/20/12/54/429006.jpg\",\r\n        title: 'Snatch',\r\n        year: '2000',\r\n        rating: 2\r\n    }\r\n]\r\n\r\n\r\nconst MovieReducer = (state = initialstate, action) => {\r\n    switch (action.type) {\r\n        case ADD_MOVIE:\r\n            return [...state,\r\n            action.payload\r\n            ]\r\n        case DELETE_MOVIE:\r\n            return state.filter(el => el.id !== action.payload)\r\n        case UPDATE_MOVIE:\r\n            return state.map(el => el.id === action.payload.id ? action.payload : el)\r\n        case SEARCH_MOVIE:\r\n            return initialstate.filter(el => el.rating >= action.payload.rating && el.title.toUpperCase().includes(action.payload.keyword.toUpperCase().trim()))\r\n        default:\r\n            return state\r\n    }\r\n}\r\nexport default MovieReducer","import {combineReducers} from 'redux'\r\nimport MovieReducer from './MovieReducer'\r\n\r\n\r\nexport default combineReducers ({movie:MovieReducer})","import { createStore } from 'redux'\r\nimport rootReducer from '../reducer'\r\n\r\n\r\nexport default createStore(rootReducer,  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())","import React from 'react'\r\nimport { connect } from 'react-redux'\r\n\r\nconst MovieItem = (props) => {\r\n    const movie = props.movies.filter(el => String(el.id) == props.match.params.id)[0]\r\n\r\n    return (\r\n        <div>\r\n            <img src={movie.image} />\r\n            <h1>{movie.title}</h1>\r\n            <p>{movie.year}</p>\r\n        </div>\r\n    )\r\n}\r\nconst mapStateToProps = state => {\r\n    return {\r\n        movies: state.movie\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(MovieItem)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux'\nimport store from './Store/store'\nimport MovieItem from './MovieItem'\nimport {BrowserRouter, Route} from 'react-router-dom'\n\n\n\nReactDOM.render(\n<BrowserRouter>\n<Provider store={store}>\n    <Route exact path='/' component={App}/>\n    <Route exact path='/movie/:id' component={MovieItem}/>\n</Provider>\n</BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}